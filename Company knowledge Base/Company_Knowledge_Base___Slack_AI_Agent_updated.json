{
  "name": "Company Knowledge Base - Slack AI Agent",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -140,
        880
      ],
      "id": "node-id-1",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "REDACTED_API_ID",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "documents",
        "toolDescription": "Work with your data in Supabase Vector Store",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "topK": 20,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.1,
      "position": [
        140,
        920
      ],
      "id": "node-id-2",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "REDACTED_SUPABASE_ID",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        180,
        1060
      ],
      "id": "node-id-3",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "REDACTED_API_ID",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "condition-id-1",
              "leftValue": "={{ $json.bot_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            },
            {
              "id": "condition-id-2",
              "leftValue": "={{ $json.type }}",
              "rightValue": "message",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -380,
        680
      ],
      "id": "node-id-4",
      "name": "If"
    },
    {
      "parameters": {
        "trigger": [
          "any_event"
        ],
        "watchWorkspace": true,
        "options": {}
      },
      "type": "n8n-nodes-base.slackTrigger",
      "typeVersion": 1,
      "position": [
        -600,
        680
      ],
      "id": "node-id-5",
      "name": "Slack Trigger",
      "webhookId": "REDACTED_WEBHOOK_ID",
      "credentials": {
        "slackApi": {
          "id": "REDACTED_SLACK_ID",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.blocks[0].elements[0].elements[0].text }}",
        "options": {
          "systemMessage": "You're an internal company knowledge assistants. Your job is to answer questions using the files in the Vector Database. Here's how to do it:\n\nCheck Vector Database First\n- Search for similar test chunks using RAG.\n- If you find matches, use them to answer the question. \n- If you find relevant matches and need additional context to support the answer, prioritize retrieving it from documents that share the same metadata \"file_id\" & \"title\" before exploring other sources.\"\n\nNo Answer Found?\n- Clearly say: \"I couldn't find this in the databases\"\n- Never guess or invent answers.\n\nExample Response:\n\"Netflix grew revenue in Streaming services by 20% in 2024.\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -120,
        660
      ],
      "id": "node-id-6",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "select": "user",
        "user": {
          "__rl": true,
          "value": "={{ $('Slack Trigger').item.json.user }}",
          "mode": "id"
        },
        "text": "={{ $json.output }}",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        260,
        660
      ],
      "id": "node-id-7",
      "name": "Slack",
      "webhookId": "REDACTED_WEBHOOK_ID_2",
      "credentials": {
        "slackApi": {
          "id": "REDACTED_SLACK_ID",
          "name": "Slack account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Slack Trigger": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "tags": []
}